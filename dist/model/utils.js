'use strict'; Object.defineProperty(exports, "__esModule", { value: true }); var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } var C = 'c'; var B = 'b'; var T = 't'; var R = 'r'; var J = 'j'; var Q = 'q'; var K = 'k'; var A = 'a'; var createPokers = exports.createPokers = function createPokers() { var pokers = []; var chat = [R, C, T, B]; for (var i = 2; i < 15; i++) { for (var j = 0; j < 4; j++) { switch (i) { case 10: pokers.push('0' + chat[j]);break; case 11: pokers.push('j' + chat[j]);break; case 12: pokers.push('q' + chat[j]);break; case 13: pokers.push('k' + chat[j]);break; case 14: pokers.push('a' + chat[j]);break; default: pokers.push('' + i + chat[j]);break; } } } return pokers; }; var getEnemy = exports.getEnemy = function getEnemy(pokers, owns) { var enemy = []; for (var i = 0; i < 52; i++) { if (owns.indexOf(pokers[i]) === -1) enemy.push(pokers[i]);else continue; } return enemy; }; var getOwns = exports.getOwns = function getOwns(data) { var owns = []; for (var i = 0; i < 3; i++) { owns = [].concat(_toConsumableArray(owns), _toConsumableArray(data[i].split("_"))); } return owns; }; var tinhDiem = exports.tinhDiem = function tinhDiem(c) { switch (c) { case '0': return 10; case 'j': return 11; case 'q': return 12; case 'k': return 13; case 'a': return 14; default: return Number(c); } }; var doiCS = exports.doiCS = function doiCS(cs) { switch (cs) { case '0': return '?'; case 'k': return 'r'; case 'a': return 'z'; default: return cs; } }; var sortByValue = exports.sortByValue = function sortByValue(mang) { var len = mang.length; for (var i = 0; i < len; i++) { for (var j = len - 1; j > i; j--) { if (doiCS(mang[j - 1][0]) < doiCS(mang[j][0])) { var temp = mang[j]; mang[j] = mang[j - 1]; mang[j - 1] = temp; } } } return mang; }; var sortBySymbol = exports.sortBySymbol = function sortBySymbol(mang) { if ((typeof mang === 'undefined' ? 'undefined' : _typeof(mang)) !== 'object' || mang.length === 0) return []; var r = [], t = [], c = [], b = []; var len = mang.length || 13; for (var i = 0; i < len; i++) { var ii = mang[i][1]; switch (ii) { case C: c.push(mang[i]);continue; case R: r.push(mang[i]);continue; case T: t.push(mang[i]);continue; case B: b.push(mang[i]);continue; default: new Error('Xem lại mảng có vấn đề'); } } var thungs = []; if (c.length !== 0) thungs = [].concat(_toConsumableArray(thungs), [sortByValue(c)]); if (r.length !== 0) thungs = [].concat(_toConsumableArray(thungs), [sortByValue(r)]); if (b.length !== 0) thungs = [].concat(_toConsumableArray(thungs), [sortByValue(b)]); if (t.length !== 0) thungs = [].concat(_toConsumableArray(thungs), [sortByValue(t)]); return thungs; }; 