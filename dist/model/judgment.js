'use strict'; Object.defineProperty(exports, "__esModule", { value: true }); exports.soChi = undefined; var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; var _cons = require('./cons'); var distance = _interopRequireWildcard(_cons); var _lodash = require('lodash'); var _lodash2 = _interopRequireDefault(_lodash); var _laws = require('./laws'); var _utils = require('./utils'); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } } var soChi = exports.soChi = function soChi(arr, enemy) { var tinhDiem2 = function tinhDiem2(item) { return Number(item[0]) + Number(item[1]) + Number(item[2]); }; var soMax = function soMax(item1, item2) { for (var i = 0; i < 3; i++) { if ((0, _utils.tinhDiem)(item1[i]) < (0, _utils.tinhDiem)(item2[i])) return false; } return true; }; var len = arr.length, _bo = [], temp = void 0; for (var i = 0; i < len; i++) { temp = taoBo(arr[i]); var binhLung = false; if (temp.soDiem[0] + 2 < temp.soDiem[1]) binhLung = true;else if (temp.soDiem[1] + 4 < temp.soDiem[2] + 2) binhLung = true; else if (temp.soDiem[0] + 2 === temp.soDiem[1]) { if ((0, _utils.tinhDiem)(temp.max[0]) < (0, _utils.tinhDiem)(temp.max[1])) binhLung = true;else if ((0, _utils.tinhDiem)(temp.max[0]) === (0, _utils.tinhDiem)(temp.max[1])) { for (var j = 0; j < 5; j++) { var kq1 = (0, _utils.tinhDiem)(temp.item[0][j][0]), kq2 = (0, _utils.tinhDiem)(temp.item[1][j][0]); if (kq1 < kq2) { binhLung = true;break; } else if (kq1 > kq2) break; } } } if (!binhLung) _bo.push(temp); } len = _bo.length; for (var i = 0; i < len; i++) { for (var j = len - 1; j > i; j--) { var sd = _bo[j].soDiem, diem = tinhDiem2(sd); var sd2 = _bo[j - 1].soDiem, diem2 = tinhDiem2(sd2); if (diem2 < diem || diem2 === diem && soMax(_bo[j].max, _bo[j - 1].max)) { var tempp = _bo[j]; _bo[j] = _bo[j - 1]; _bo[j - 1] = tempp; } } } var soChiWin = function soChiWin(ene, item) { var win = 0, winner = []; for (var k = 0; k < 3; k++) { if (item.soDiem[k] === 35 && ene.soDiem[k] !== 35) { win += 8;winner.push(k + 1);continue; } else if (item.soDiem[k] !== 35 && ene.soDiem[k] === 35) { win -= 8;continue; } if (item.soDiem[k] > ene.soDiem[k]) { win++;winner.push(k + 1);continue; } if (item.soDiem[k] === ene.soDiem[k]) { if ((0, _utils.tinhDiem)(ene.max[k]) < (0, _utils.tinhDiem)(item.max[k])) { winner.push(k + 1);win++; } else if ((0, _utils.tinhDiem)(ene.max[k]) === (0, _utils.tinhDiem)(item.max[k])) { for (var j = 1; j < 5; j++) { var kq1 = (0, _utils.tinhDiem)(item.item[0][j][0]), kq2 = (0, _utils.tinhDiem)(ene.item[0][j][0]); if (kq1 > kq2) { win++;winner.push(k + 1);break; } else if (kq1 < kq2) break; } } } } return { win: win, winner: winner }; }; var sortByWin = function sortByWin(items) { var ll = items.length; for (var _i = 0; _i < ll - 1; _i++) { for (var _j = ll - 1; _j > _i; _j--) { if (items[_j - 1].chiWin < items[_j].chiWin) { var tempp = items[_j]; items[_j] = items[_j - 1]; items[_j - 1] = tempp; } } } return items; }; if (enemy) { var rot = enemy.soDiem, chon = [], winner = 0; for (var i = 0; i < len; i++) { var _soChiWin = soChiWin(enemy, _bo[i]), _winner = _soChiWin.winner, win = _soChiWin.win; chon.push(_extends({}, _bo[i], { chiWin: win, winner: _winner })); } _bo = sortByWin(chon); } return _bo; }; var taoBo = function taoBo(bo) { var checkChi = function checkChi(chi) { var bo4 = (0, _laws.timBo)(chi, 4), thung = (0, _laws.layThungs)(chi), xanhs = (0, _laws.layXanhs)(chi); if (bo4.length === 1) return [distance.TUQUY, bo4[0][0][0]];else if (thung.length === 1 && xanhs.length === 1) return [distance.THUNGXANH, thung[0][0][0]]; if (thung.length === 1) return [distance.THUNG, thung[0][0][0]]; if (xanhs.length === 1) return [distance.XANH, xanhs[0][0][0]]; var bo2 = (0, _laws.timBo)(chi, 2), bo3 = (0, _laws.timBo)(chi, 3); if (bo3.length === 1 && bo2.length === 1) return [distance.CU, bo3[0][0][0]];else if (bo3.length === 1 && bo2.length === 0) return [distance.XAM, bo3[0][0][0]]; var doi = (0, _laws.timBo)(chi, 2); if (doi.length === 2) return [distance.DOIDOI, doi[0][0][0]];else if (doi.length === 1) return [distance.DOI, doi[0][0][0]]; return [distance.MAUTHAU, chi[0][0]]; }; var soDiem = [], max = []; for (var i = 0; i < 3; i++) { var pi = checkChi(bo[i]); max.push(pi[1]); soDiem.push(pi[0] + i + i); } if (soDiem[0] === distance.XANH && soDiem[1] === distance.XANH + 2) { if ((0, _laws.kiemTraXanh3)(bo[2])) soDiem = [100, 100, 100]; } return { item: bo, soDiem: soDiem, max: max }; }; var sortArr = function sortArr(arr) { var len = arr.length; if (len === 1 || len === 0) return arr; for (var i = 0; i < len - 1; i++) { if (arr[i].value < arr[i + 1].value) { var temp = arr[i]; arr[i] = arr[i + 1]; arr[i + 1] = temp; } } return arr; };